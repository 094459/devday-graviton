{
  "Resources": {
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "backend/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/Resource"
      }
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "eu-west-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet1/Subnet"
      }
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet1/RouteTable"
      }
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet1/EIP"
      }
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet1/NATGateway"
      }
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "eu-west-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet2/Subnet"
      }
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet2/RouteTable"
      }
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "VPCPublicSubnet2EIP4947BC00": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet2/EIP"
      }
    },
    "VPCPublicSubnet2NATGateway3C070193": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet2/NATGateway"
      }
    },
    "VPCPublicSubnet3Subnet631C5E25": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "eu-west-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet3/Subnet"
      }
    },
    "VPCPublicSubnet3RouteTable98AE0E14": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet3/RouteTable"
      }
    },
    "VPCPublicSubnet3RouteTableAssociation427FE0C6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet3Subnet631C5E25"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet3/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet3DefaultRouteA0D29D46": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet3RouteTable98AE0E14"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet3/DefaultRoute"
      }
    },
    "VPCPublicSubnet3EIPAD4BC883": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet3/EIP"
      }
    },
    "VPCPublicSubnet3NATGatewayD3048F5C": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet3EIPAD4BC883",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet3Subnet631C5E25"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PublicSubnet3/NATGateway"
      }
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "eu-west-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet1/Subnet"
      }
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet1/RouteTable"
      }
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "eu-west-1b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet2/Subnet"
      }
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet2/RouteTable"
      }
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet2NATGateway3C070193"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "VPCPrivateSubnet3Subnet3EDCD457": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": "eu-west-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet3/Subnet"
      }
    },
    "VPCPrivateSubnet3RouteTable192186F8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "backend/VPC/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet3/RouteTable"
      }
    },
    "VPCPrivateSubnet3RouteTableAssociationC28D144E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet3DefaultRoute27F311AE": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet3RouteTable192186F8"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/PrivateSubnet3/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "backend/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/VPC/VPCGW"
      }
    },
    "EKSRoleE1D5681C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/EKS/Role/Resource"
      }
    },
    "EKSControlPlaneSecurityGroup1F2D0745": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/EKS/ControlPlaneSecurityGroup/Resource"
      }
    },
    "EKSCreationRole6166D41F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::704533066374:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "DependsOn": [
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPrivateSubnet3DefaultRoute27F311AE",
        "VPCPrivateSubnet3RouteTable192186F8",
        "VPCPrivateSubnet3RouteTableAssociationC28D144E",
        "VPCPrivateSubnet3Subnet3EDCD457",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3EIPAD4BC883",
        "VPCPublicSubnet3NATGatewayD3048F5C",
        "VPCPublicSubnet3RouteTable98AE0E14",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
        "VPCPublicSubnet3Subnet631C5E25",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "backend/EKS/Resource/CreationRole/Resource"
      }
    },
    "EKSCreationRoleDefaultPolicy190BA809": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EKSRoleE1D5681C",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:listAttachedRolePolicies"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:DescribeVpcs",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ec2:eu-west-1:704533066374:vpc/",
                    {
                      "Ref": "VPCB9E5F0B4"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EKSCreationRoleDefaultPolicy190BA809",
        "Roles": [
          {
            "Ref": "EKSCreationRole6166D41F"
          }
        ]
      },
      "DependsOn": [
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPrivateSubnet3DefaultRoute27F311AE",
        "VPCPrivateSubnet3RouteTable192186F8",
        "VPCPrivateSubnet3RouteTableAssociationC28D144E",
        "VPCPrivateSubnet3Subnet3EDCD457",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3EIPAD4BC883",
        "VPCPublicSubnet3NATGatewayD3048F5C",
        "VPCPublicSubnet3RouteTable98AE0E14",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
        "VPCPublicSubnet3Subnet631C5E25",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "backend/EKS/Resource/CreationRole/DefaultPolicy/Resource"
      }
    },
    "EKSE2753513": {
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.backendawscdkawseksClusterResourceProviderframeworkonEvent122626C5Arn"
          ]
        },
        "Config": {
          "version": "1.18",
          "roleArn": {
            "Fn::GetAtt": [
              "EKSRoleE1D5681C",
              "Arn"
            ]
          },
          "resourcesVpcConfig": {
            "subnetIds": [
              {
                "Ref": "VPCPublicSubnet1SubnetB4246D30"
              },
              {
                "Ref": "VPCPublicSubnet2Subnet74179F39"
              },
              {
                "Ref": "VPCPublicSubnet3Subnet631C5E25"
              },
              {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
              },
              {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
              },
              {
                "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
              }
            ],
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "EKSControlPlaneSecurityGroup1F2D0745",
                  "GroupId"
                ]
              }
            ],
            "endpointPublicAccess": true,
            "endpointPrivateAccess": true
          }
        },
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "EKSCreationRole6166D41F",
            "Arn"
          ]
        },
        "AttributesRevision": 2
      },
      "DependsOn": [
        "EKSCreationRoleDefaultPolicy190BA809",
        "EKSCreationRole6166D41F",
        "VPCIGWB7E252D3",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableBE8A6027",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet1Subnet8BCA10E0",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTable0A19E10E",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
        "VPCPrivateSubnet2SubnetCFCDAA7A",
        "VPCPrivateSubnet3DefaultRoute27F311AE",
        "VPCPrivateSubnet3RouteTable192186F8",
        "VPCPrivateSubnet3RouteTableAssociationC28D144E",
        "VPCPrivateSubnet3Subnet3EDCD457",
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1EIP6AD938E8",
        "VPCPublicSubnet1NATGatewayE0556630",
        "VPCPublicSubnet1RouteTableFEE4B781",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet1SubnetB4246D30",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2EIP4947BC00",
        "VPCPublicSubnet2NATGateway3C070193",
        "VPCPublicSubnet2RouteTable6F1A15F1",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
        "VPCPublicSubnet2Subnet74179F39",
        "VPCPublicSubnet3DefaultRouteA0D29D46",
        "VPCPublicSubnet3EIPAD4BC883",
        "VPCPublicSubnet3NATGatewayD3048F5C",
        "VPCPublicSubnet3RouteTable98AE0E14",
        "VPCPublicSubnet3RouteTableAssociation427FE0C6",
        "VPCPublicSubnet3Subnet631C5E25",
        "VPCB9E5F0B4",
        "VPCVPCGW99B986DC"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "backend/EKS/Resource/Resource/Default"
      }
    },
    "EKSKubectlReadyBarrier4DA2E876": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready"
      },
      "DependsOn": [
        "EKSCreationRoleDefaultPolicy190BA809",
        "EKSCreationRole6166D41F",
        "EKSE2753513"
      ],
      "Metadata": {
        "aws:cdk:path": "backend/EKS/KubectlReadyBarrier"
      }
    },
    "EKSMastersRole2941C445": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::704533066374:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/EKS/MastersRole/Resource"
      }
    },
    "EKSAwsAuthmanifest17419E50": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.backendawscdkawseksKubectlProviderframeworkonEventD57D863BArn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\"},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "EKSMastersRole2941C445",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "EKSMastersRole2941C445",
                  "Arn"
                ]
              },
              "\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "EKSNodegroupDefaultCapacityNodeGroupRoleB22C022E",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "EKSNodegroupDefaultCapacityNodeGroupRoleB22C022E",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "EKSE2753513"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "EKSCreationRole6166D41F",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "EKSKubectlReadyBarrier4DA2E876"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "backend/EKS/AwsAuth/manifest/Resource/Default"
      }
    },
    "EKSNodegroupDefaultCapacityNodeGroupRoleB22C022E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/SecretsManagerReadWrite"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/EKS/NodegroupDefaultCapacity/NodeGroupRole/Resource"
      }
    },
    "EKSNodegroupDefaultCapacity9CFEB324": {
      "Type": "AWS::EKS::Nodegroup",
      "Properties": {
        "ClusterName": {
          "Ref": "EKSE2753513"
        },
        "NodeRole": {
          "Fn::GetAtt": [
            "EKSNodegroupDefaultCapacityNodeGroupRoleB22C022E",
            "Arn"
          ]
        },
        "Subnets": [
          {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
          },
          {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
          },
          {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
          }
        ],
        "AmiType": "AL2_x86_64",
        "ForceUpdateEnabled": true,
        "InstanceTypes": [
          "m5.large"
        ],
        "ScalingConfig": {
          "DesiredSize": 1,
          "MaxSize": 1,
          "MinSize": 1
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/EKS/NodegroupDefaultCapacity/Resource"
      }
    },
    "EKSNodegroupgraviton2DD9534F": {
      "Type": "AWS::EKS::Nodegroup",
      "Properties": {
        "ClusterName": {
          "Ref": "EKSE2753513"
        },
        "NodeRole": {
          "Fn::GetAtt": [
            "EKSNodegroupDefaultCapacityNodeGroupRoleB22C022E",
            "Arn"
          ]
        },
        "Subnets": [
          {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
          },
          {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
          },
          {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
          }
        ],
        "AmiType": "AL2_ARM_64",
        "ForceUpdateEnabled": true,
        "InstanceTypes": [
          "m6g.large"
        ],
        "NodegroupName": "graviton",
        "ScalingConfig": {
          "DesiredSize": 1,
          "MaxSize": 1,
          "MinSize": 1
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/EKS/Nodegroupgraviton/Resource"
      }
    },
    "EKSOpenIdConnectProviderD16FA620": {
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn"
          ]
        },
        "ClientIDList": [
          "sts.amazonaws.com"
        ],
        "ThumbprintList": [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
        ],
        "Url": {
          "Fn::GetAtt": [
            "EKSE2753513",
            "OpenIdConnectIssuerUrl"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "backend/EKS/OpenIdConnectProvider/Resource/Default"
      }
    },
    "EKSchartLBIngressE14EB2F8": {
      "Type": "Custom::AWSCDK-EKS-HelmChart",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.backendawscdkawseksKubectlProviderframeworkonEventD57D863BArn"
          ]
        },
        "ClusterName": {
          "Ref": "EKSE2753513"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "EKSCreationRole6166D41F",
            "Arn"
          ]
        },
        "Release": "aws-load-balancer-controller",
        "Chart": "aws-load-balancer-controller",
        "Values": {
          "Fn::Join": [
            "",
            [
              "{\"clusterName\":\"",
              {
                "Ref": "EKSE2753513"
              },
              "\",\"serviceAccount.name\":\"aws-load-balancer-controller\",\"serviceAccount.create\":\"false\"}"
            ]
          ]
        },
        "Namespace": "kube-system",
        "Repository": "https://aws.github.io/eks-charts",
        "CreateNamespace": true
      },
      "DependsOn": [
        "EKSKubectlReadyBarrier4DA2E876"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "backend/EKS/chart-LBIngress/Resource/Default"
      }
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.eu-west-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cS3Bucket3C014216"
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cS3VersionKey5A891FAC"
                      }
                    ]
                  }
                ]
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cS3VersionKey5A891FAC"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Parameters": {
          "referencetobackendEKSCreationRoleB4733AF4Arn": {
            "Fn::GetAtt": [
              "EKSCreationRole6166D41F",
              "Arn"
            ]
          },
          "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket5B47C2C9Ref": {
            "Ref": "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket36C546E0"
          },
          "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1Ref": {
            "Ref": "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey85C003F9"
          },
          "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0Ref": {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43"
          },
          "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef": {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource"
      }
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.eu-west-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573S3BucketDF473350"
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573S3VersionKey3EBD5EBC"
                      }
                    ]
                  }
                ]
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573S3VersionKey3EBD5EBC"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Parameters": {
          "referencetobackendEKS854B024AArn": {
            "Fn::GetAtt": [
              "EKSE2753513",
              "Arn"
            ]
          },
          "referencetobackendEKSCreationRoleB4733AF4Arn": {
            "Fn::GetAtt": [
              "EKSCreationRole6166D41F",
              "Arn"
            ]
          },
          "referencetobackendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket3D45D596Ref": {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2"
          },
          "referencetobackendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKeyB9F0BCCERef": {
            "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A"
          },
          "referencetobackendVPCPrivateSubnet1Subnet99009594Ref": {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
          },
          "referencetobackendVPCPrivateSubnet2Subnet44686701Ref": {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
          },
          "referencetobackendVPCPrivateSubnet3SubnetACE4404ARef": {
            "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
          },
          "referencetobackendEKS854B024AClusterSecurityGroupId": {
            "Fn::GetAtt": [
              "EKSE2753513",
              "ClusterSecurityGroupId"
            ]
          },
          "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0Ref": {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43"
          },
          "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef": {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource"
      }
    },
    "ConditionJson7698FD65": {
      "Type": "Custom::AWSCDKCfnJson",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
            "Arn"
          ]
        },
        "Value": {
          "Fn::Join": [
            "",
            [
              "{\"",
              {
                "Fn::GetAtt": [
                  "EKSE2753513",
                  "OpenIdConnectIssuer"
                ]
              },
              ":aud\":\"sts.amazonaws.com\",\"",
              {
                "Fn::GetAtt": [
                  "EKSE2753513",
                  "OpenIdConnectIssuer"
                ]
              },
              ":sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}"
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "backend/ConditionJson/Resource/Default"
      }
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/AWSCDKCfnUtilsProviderCustomResourceProvider/Role"
      }
    },
    "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867"
      ],
      "Metadata": {
        "aws:cdk:path": "backend/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler"
      }
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ],
        "Policies": [
          {
            "PolicyName": "Inline",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider"
                  ]
                }
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role"
      }
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65"
      ],
      "Metadata": {
        "aws:cdk:path": "backend/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler"
      }
    },
    "ServiceAccountRoleE318E4CB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "Fn::GetAtt": [
                    "ConditionJson7698FD65",
                    "Value"
                  ]
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Ref": "EKSOpenIdConnectProviderD16FA620"
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "backend/ServiceAccountRole/Resource"
      }
    },
    "LBControllerPolicy41005BD8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:CreateServiceLinkedRole",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeVpcs",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeTags",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "cognito-idp:DescribeUserPoolClient",
                "acm:ListCertificates",
                "acm:DescribeCertificate",
                "iam:ListServerCertificates",
                "iam:GetServerCertificate",
                "waf-regional:GetWebACL",
                "waf-regional:GetWebACLForResource",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
                "wafv2:GetWebACL",
                "wafv2:GetWebACLForResource",
                "wafv2:AssociateWebACL",
                "wafv2:DisassociateWebACL",
                "shield:GetSubscriptionState",
                "shield:DescribeProtection",
                "shield:CreateProtection",
                "shield:DeleteProtection"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:CreateSecurityGroup",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:CreateTags",
              "Condition": {
                "StringEquals": {
                  "ec2:CreateAction": "CreateSecurityGroup"
                },
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:ec2:*:*:security-group/*"
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DeleteTags"
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:ec2:*:*:security-group/*"
            },
            {
              "Action": [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:DeleteSecurityGroup"
              ],
              "Condition": {
                "Null": {
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateTargetGroup"
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:DeleteRule"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:RemoveTags"
              ],
              "Condition": {
                "Null": {
                  "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
              ]
            },
            {
              "Action": [
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:DeleteTargetGroup"
              ],
              "Condition": {
                "Null": {
                  "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:DeregisterTargets"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
            },
            {
              "Action": [
                "elasticloadbalancing:SetWebAcl",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:ModifyRule"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LBControllerPolicy41005BD8",
        "Roles": [
          {
            "Ref": "ServiceAccountRoleE318E4CB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "backend/LBControllerPolicy/Resource"
      }
    },
    "ServiceAccount6C9DC77F": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.backendawscdkawseksKubectlProviderframeworkonEventD57D863BArn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"aws-load-balancer-controller\",\"namespace\":\"kube-system\",\"labels\":{\"app.kubernetes.io/name\":\"aws-load-balancer-controller\",\"app.kubernetes.io/managed-by\":\"Helm\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
              {
                "Fn::GetAtt": [
                  "ServiceAccountRoleE318E4CB",
                  "Arn"
                ]
              },
              "\",\"meta.helm.sh/release-name\":\"aws-load-balancer-controller\",\"meta.helm.sh/release-namespace\":\"kube-system\"}}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "EKSE2753513"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "EKSCreationRole6166D41F",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "EKSKubectlReadyBarrier4DA2E876"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "backend/ServiceAccount/Resource/Default"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.94.1,@aws-cdk/assets=1.72.0,@aws-cdk/aws-apigateway=1.72.0,@aws-cdk/aws-applicationautoscaling=1.72.0,@aws-cdk/aws-autoscaling=1.72.0,@aws-cdk/aws-autoscaling-common=1.72.0,@aws-cdk/aws-autoscaling-hooktargets=1.72.0,@aws-cdk/aws-batch=1.72.0,@aws-cdk/aws-certificatemanager=1.72.0,@aws-cdk/aws-cloudformation=1.72.0,@aws-cdk/aws-cloudfront=1.72.0,@aws-cdk/aws-cloudwatch=1.72.0,@aws-cdk/aws-codebuild=1.72.0,@aws-cdk/aws-codecommit=1.72.0,@aws-cdk/aws-codedeploy=1.72.0,@aws-cdk/aws-codeguruprofiler=1.72.0,@aws-cdk/aws-codepipeline=1.72.0,@aws-cdk/aws-codepipeline-actions=1.72.0,@aws-cdk/aws-cognito=1.72.0,@aws-cdk/aws-ec2=1.72.0,@aws-cdk/aws-ecr=1.72.0,@aws-cdk/aws-ecr-assets=1.72.0,@aws-cdk/aws-ecs=1.72.0,@aws-cdk/aws-efs=1.72.0,@aws-cdk/aws-eks=1.72.0,@aws-cdk/aws-elasticloadbalancing=1.72.0,@aws-cdk/aws-elasticloadbalancingv2=1.72.0,@aws-cdk/aws-events=1.72.0,@aws-cdk/aws-events-targets=1.72.0,@aws-cdk/aws-iam=1.72.0,@aws-cdk/aws-kinesis=1.72.0,@aws-cdk/aws-kinesisfirehose=1.72.0,@aws-cdk/aws-kms=1.72.0,@aws-cdk/aws-lambda=1.72.0,@aws-cdk/aws-logs=1.72.0,@aws-cdk/aws-route53=1.72.0,@aws-cdk/aws-route53-targets=1.72.0,@aws-cdk/aws-s3=1.72.0,@aws-cdk/aws-s3-assets=1.72.0,@aws-cdk/aws-sam=1.72.0,@aws-cdk/aws-secretsmanager=1.72.0,@aws-cdk/aws-servicecatalog=1.72.0,@aws-cdk/aws-servicediscovery=1.72.0,@aws-cdk/aws-sns=1.72.0,@aws-cdk/aws-sns-subscriptions=1.72.0,@aws-cdk/aws-sqs=1.72.0,@aws-cdk/aws-ssm=1.72.0,@aws-cdk/aws-stepfunctions=1.72.0,@aws-cdk/cloud-assembly-schema=1.72.0,@aws-cdk/core=1.72.0,@aws-cdk/custom-resources=1.72.0,@aws-cdk/cx-api=1.72.0,@aws-cdk/region-info=1.72.0,jsii-runtime=Python/3.8.5"
      },
      "Metadata": {
        "aws:cdk:path": "backend/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "EKSConfigCommand22B4420D": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "EKSE2753513"
            },
            " --region eu-west-1 --role-arn ",
            {
              "Fn::GetAtt": [
                "EKSMastersRole2941C445",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "EKSGetTokenCommand3F955315": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "EKSE2753513"
            },
            " --region eu-west-1 --role-arn ",
            {
              "Fn::GetAtt": [
                "EKSMastersRole2941C445",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "ExportsOutputFnGetAttEKSCreationRole6166D41FArnBB149869": {
      "Value": {
        "Fn::GetAtt": [
          "EKSCreationRole6166D41F",
          "Arn"
        ]
      },
      "Export": {
        "Name": "backend:ExportsOutputFnGetAttEKSCreationRole6166D41FArnBB149869"
      }
    },
    "ExportsOutputRefEKSE2753513AF988E47": {
      "Value": {
        "Ref": "EKSE2753513"
      },
      "Export": {
        "Name": "backend:ExportsOutputRefEKSE2753513AF988E47"
      }
    }
  },
  "Parameters": {
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket36C546E0": {
      "Type": "String",
      "Description": "S3 bucket for asset \"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\""
    },
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey85C003F9": {
      "Type": "String",
      "Description": "S3 key for asset version \"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\""
    },
    "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1ArtifactHash32F5D823": {
      "Type": "String",
      "Description": "Artifact hash for asset \"50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1\""
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": {
      "Type": "String",
      "Description": "S3 bucket for asset \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\""
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": {
      "Type": "String",
      "Description": "S3 key for asset version \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\""
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": {
      "Type": "String",
      "Description": "Artifact hash for asset \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\""
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2": {
      "Type": "String",
      "Description": "S3 bucket for asset \"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\""
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A": {
      "Type": "String",
      "Description": "S3 key for asset version \"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\""
    },
    "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2ArtifactHashE86B38C7": {
      "Type": "String",
      "Description": "Artifact hash for asset \"b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2\""
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3BucketDCF19BBB": {
      "Type": "String",
      "Description": "S3 bucket for asset \"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\""
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608S3VersionKey945AF9FB": {
      "Type": "String",
      "Description": "S3 key for asset version \"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\""
    },
    "AssetParameters10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608ArtifactHashECA71323": {
      "Type": "String",
      "Description": "Artifact hash for asset \"10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608\""
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3BucketD01B79A5": {
      "Type": "String",
      "Description": "S3 bucket for asset \"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\""
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37S3VersionKeyC0E7DA00": {
      "Type": "String",
      "Description": "S3 key for asset version \"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\""
    },
    "AssetParametersbac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37ArtifactHash75842D94": {
      "Type": "String",
      "Description": "Artifact hash for asset \"bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37\""
    },
    "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cS3Bucket3C014216": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c\""
    },
    "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cS3VersionKey5A891FAC": {
      "Type": "String",
      "Description": "S3 key for asset version \"f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c\""
    },
    "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cArtifactHashE601E200": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c\""
    },
    "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573S3BucketDF473350": {
      "Type": "String",
      "Description": "S3 bucket for asset \"82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573\""
    },
    "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573S3VersionKey3EBD5EBC": {
      "Type": "String",
      "Description": "S3 key for asset version \"82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573\""
    },
    "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573ArtifactHash356EE34A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573\""
    }
  }
}