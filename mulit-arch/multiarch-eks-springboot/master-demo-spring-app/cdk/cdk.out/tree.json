{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "backend": {
        "id": "backend",
        "path": "backend",
        "children": {
          "VPC": {
            "id": "VPC",
            "path": "backend/VPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend/VPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "backend/VPC"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "backend/VPC/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "backend/VPC/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": "eu-west-1a",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "backend/VPC/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "backend/VPC/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "backend/VPC/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
                        },
                        "subnetId": {
                          "Ref": "VPCPublicSubnet1SubnetB4246D30"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "backend/VPC/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "backend/VPC/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "backend/VPC/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VPCPublicSubnet1EIP6AD938E8",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VPCPublicSubnet1SubnetB4246D30"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "backend/VPC/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "backend/VPC/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.32.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": "eu-west-1b",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "backend/VPC/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "backend/VPC/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "backend/VPC/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
                        },
                        "subnetId": {
                          "Ref": "VPCPublicSubnet2Subnet74179F39"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "backend/VPC/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "backend/VPC/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "backend/VPC/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VPCPublicSubnet2EIP4947BC00",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VPCPublicSubnet2Subnet74179F39"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet3": {
                "id": "PublicSubnet3",
                "path": "backend/VPC/PublicSubnet3",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "backend/VPC/PublicSubnet3/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": "eu-west-1c",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet3"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "backend/VPC/PublicSubnet3/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "backend/VPC/PublicSubnet3/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet3"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "backend/VPC/PublicSubnet3/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet3RouteTable98AE0E14"
                        },
                        "subnetId": {
                          "Ref": "VPCPublicSubnet3Subnet631C5E25"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "backend/VPC/PublicSubnet3/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPublicSubnet3RouteTable98AE0E14"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VPCIGWB7E252D3"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "backend/VPC/PublicSubnet3/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet3"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "backend/VPC/PublicSubnet3/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VPCPublicSubnet3EIPAD4BC883",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "VPCPublicSubnet3Subnet631C5E25"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PublicSubnet3"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "backend/VPC/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "backend/VPC/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.96.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": "eu-west-1a",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "kubernetes.io/role/internal-elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "backend/VPC/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "backend/VPC/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/internal-elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "backend/VPC/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
                        },
                        "subnetId": {
                          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "backend/VPC/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "backend/VPC/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "backend/VPC/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": "eu-west-1b",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "kubernetes.io/role/internal-elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "backend/VPC/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "backend/VPC/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/internal-elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "backend/VPC/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
                        },
                        "subnetId": {
                          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "backend/VPC/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VPCPublicSubnet2NATGateway3C070193"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet3": {
                "id": "PrivateSubnet3",
                "path": "backend/VPC/PrivateSubnet3",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "backend/VPC/PrivateSubnet3/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.160.0/19",
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "availabilityZone": "eu-west-1c",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "kubernetes.io/role/internal-elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PrivateSubnet3"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "backend/VPC/PrivateSubnet3/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "backend/VPC/PrivateSubnet3/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        },
                        "tags": [
                          {
                            "key": "kubernetes.io/role/internal-elb",
                            "value": "1"
                          },
                          {
                            "key": "Name",
                            "value": "backend/VPC/PrivateSubnet3"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "backend/VPC/PrivateSubnet3/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPrivateSubnet3RouteTable192186F8"
                        },
                        "subnetId": {
                          "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "backend/VPC/PrivateSubnet3/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VPCPrivateSubnet3RouteTable192186F8"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VPCPublicSubnet3NATGatewayD3048F5C"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "backend/VPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "backend/VPC"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "backend/VPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "VPCB9E5F0B4"
                    },
                    "internetGatewayId": {
                      "Ref": "VPCIGWB7E252D3"
                    }
                  }
                }
              }
            }
          },
          "EKS": {
            "id": "EKS",
            "path": "backend/EKS",
            "children": {
              "Role": {
                "id": "Role",
                "path": "backend/EKS/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/EKS/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "eks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEKSClusterPolicy"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "ControlPlaneSecurityGroup": {
                "id": "ControlPlaneSecurityGroup",
                "path": "backend/EKS/ControlPlaneSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/EKS/ControlPlaneSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "EKS Control Plane Security Group",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "vpcId": {
                          "Ref": "VPCB9E5F0B4"
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "backend/EKS/Resource",
                "children": {
                  "CreationRole": {
                    "id": "CreationRole",
                    "path": "backend/EKS/Resource/CreationRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/EKS/Resource/CreationRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "AWS": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":iam::704533066374:root"
                                        ]
                                      ]
                                    }
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "backend/EKS/Resource/CreationRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/EKS/Resource/CreationRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "iam:PassRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "EKSRoleE1D5681C",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeRouteTables"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": [
                                        "eks:CreateCluster",
                                        "eks:DescribeCluster",
                                        "eks:DescribeUpdate",
                                        "eks:DeleteCluster",
                                        "eks:UpdateClusterVersion",
                                        "eks:UpdateClusterConfig",
                                        "eks:CreateFargateProfile",
                                        "eks:TagResource",
                                        "eks:UntagResource"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": [
                                        "*"
                                      ]
                                    },
                                    {
                                      "Action": [
                                        "eks:DescribeFargateProfile",
                                        "eks:DeleteFargateProfile"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": [
                                        "iam:GetRole",
                                        "iam:listAttachedRolePolicies"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "iam:CreateServiceLinkedRole",
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": "ec2:DescribeVpcs",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":ec2:eu-west-1:704533066374:vpc/",
                                            {
                                              "Ref": "VPCB9E5F0B4"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "EKSCreationRoleDefaultPolicy190BA809",
                                "roles": [
                                  {
                                    "Ref": "EKSCreationRole6166D41F"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/EKS/Resource/Resource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "backend/EKS/Resource/Resource/Default"
                      }
                    }
                  }
                }
              },
              "KubectlReadyBarrier": {
                "id": "KubectlReadyBarrier",
                "path": "backend/EKS/KubectlReadyBarrier"
              },
              "ClusterSecurityGroup": {
                "id": "ClusterSecurityGroup",
                "path": "backend/EKS/ClusterSecurityGroup"
              },
              "MastersRole": {
                "id": "MastersRole",
                "path": "backend/EKS/MastersRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/EKS/MastersRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::704533066374:root"
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "AwsAuth": {
                "id": "AwsAuth",
                "path": "backend/EKS/AwsAuth",
                "children": {
                  "manifest": {
                    "id": "manifest",
                    "path": "backend/EKS/AwsAuth/manifest",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/EKS/AwsAuth/manifest/Resource",
                        "children": {
                          "Default": {
                            "id": "Default",
                            "path": "backend/EKS/AwsAuth/manifest/Resource/Default"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "NodegroupDefaultCapacity": {
                "id": "NodegroupDefaultCapacity",
                "path": "backend/EKS/NodegroupDefaultCapacity",
                "children": {
                  "NodeGroupRole": {
                    "id": "NodeGroupRole",
                    "path": "backend/EKS/NodegroupDefaultCapacity/NodeGroupRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/EKS/NodegroupDefaultCapacity/NodeGroupRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ec2.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/AmazonEKS_CNI_Policy"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/SecretsManagerReadWrite"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/EKS/NodegroupDefaultCapacity/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EKS::Nodegroup",
                      "aws:cdk:cloudformation:props": {
                        "clusterName": {
                          "Ref": "EKSE2753513"
                        },
                        "nodeRole": {
                          "Fn::GetAtt": [
                            "EKSNodegroupDefaultCapacityNodeGroupRoleB22C022E",
                            "Arn"
                          ]
                        },
                        "subnets": [
                          {
                            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
                          },
                          {
                            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
                          },
                          {
                            "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
                          }
                        ],
                        "amiType": "AL2_x86_64",
                        "forceUpdateEnabled": true,
                        "instanceTypes": [
                          "m5.large"
                        ],
                        "scalingConfig": {
                          "desiredSize": 1,
                          "maxSize": 1,
                          "minSize": 1
                        }
                      }
                    }
                  }
                }
              },
              "ConfigCommand": {
                "id": "ConfigCommand",
                "path": "backend/EKS/ConfigCommand"
              },
              "GetTokenCommand": {
                "id": "GetTokenCommand",
                "path": "backend/EKS/GetTokenCommand"
              },
              "Nodegroupgraviton": {
                "id": "Nodegroupgraviton",
                "path": "backend/EKS/Nodegroupgraviton",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/EKS/Nodegroupgraviton/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EKS::Nodegroup",
                      "aws:cdk:cloudformation:props": {
                        "clusterName": {
                          "Ref": "EKSE2753513"
                        },
                        "nodeRole": {
                          "Fn::GetAtt": [
                            "EKSNodegroupDefaultCapacityNodeGroupRoleB22C022E",
                            "Arn"
                          ]
                        },
                        "subnets": [
                          {
                            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
                          },
                          {
                            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
                          },
                          {
                            "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
                          }
                        ],
                        "amiType": "AL2_ARM_64",
                        "forceUpdateEnabled": true,
                        "instanceTypes": [
                          "m6g.large"
                        ],
                        "nodegroupName": "graviton",
                        "scalingConfig": {
                          "desiredSize": 1,
                          "maxSize": 1,
                          "minSize": 1
                        }
                      }
                    }
                  }
                }
              },
              "OpenIdConnectProvider": {
                "id": "OpenIdConnectProvider",
                "path": "backend/EKS/OpenIdConnectProvider",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/EKS/OpenIdConnectProvider/Resource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "backend/EKS/OpenIdConnectProvider/Resource/Default"
                      }
                    }
                  }
                }
              },
              "chart-LBIngress": {
                "id": "chart-LBIngress",
                "path": "backend/EKS/chart-LBIngress",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/EKS/chart-LBIngress/Resource",
                    "children": {
                      "Default": {
                        "id": "Default",
                        "path": "backend/EKS/chart-LBIngress/Resource/Default"
                      }
                    }
                  }
                }
              }
            }
          },
          "@aws-cdk--aws-eks.ClusterResourceProvider": {
            "id": "@aws-cdk--aws-eks.ClusterResourceProvider",
            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider",
            "children": {
              "OnEventHandler": {
                "id": "OnEventHandler",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Ref": "referencetobackendEKSCreationRoleB4733AF4Arn"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "OnEventHandlerServiceRoleDefaultPolicyC57085D4",
                                "roles": [
                                  {
                                    "Ref": "OnEventHandlerServiceRole15A26729"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler/Code/Stage"
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler/Code/AssetBucket"
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/OnEventHandler/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Ref": "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket5B47C2C9Ref"
                          },
                          "s3Key": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    0,
                                    {
                                      "Fn::Split": [
                                        "||",
                                        {
                                          "Ref": "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1Ref"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Fn::Select": [
                                    1,
                                    {
                                      "Fn::Split": [
                                        "||",
                                        {
                                          "Ref": "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1Ref"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          }
                        },
                        "handler": "index.onEvent",
                        "role": {
                          "Fn::GetAtt": [
                            "OnEventHandlerServiceRole15A26729",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs12.x",
                        "description": "onEvent handler for EKS cluster resource provider",
                        "timeout": 60
                      }
                    }
                  }
                }
              },
              "IsCompleteHandler": {
                "id": "IsCompleteHandler",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Ref": "referencetobackendEKSCreationRoleB4733AF4Arn"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "IsCompleteHandlerServiceRoleDefaultPolicy8F64197B",
                                "roles": [
                                  {
                                    "Ref": "IsCompleteHandlerServiceRole5810CC58"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler/Code/Stage"
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler/Code/AssetBucket"
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/IsCompleteHandler/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Ref": "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket5B47C2C9Ref"
                          },
                          "s3Key": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    0,
                                    {
                                      "Fn::Split": [
                                        "||",
                                        {
                                          "Ref": "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1Ref"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Fn::Select": [
                                    1,
                                    {
                                      "Fn::Split": [
                                        "||",
                                        {
                                          "Ref": "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1Ref"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          }
                        },
                        "handler": "index.isComplete",
                        "role": {
                          "Fn::GetAtt": [
                            "IsCompleteHandlerServiceRole5810CC58",
                            "Arn"
                          ]
                        },
                        "runtime": "nodejs12.x",
                        "description": "isComplete handler for EKS cluster resource provider",
                        "timeout": 60
                      }
                    }
                  }
                }
              },
              "Provider": {
                "id": "Provider",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider",
                "children": {
                  "framework-onEvent": {
                    "id": "framework-onEvent",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent/ServiceRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "OnEventHandler42BEBAE0",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "IsCompleteHandler7073F4DA",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "states:StartExecution",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Ref": "Providerwaiterstatemachine5D4A9DF0"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "ProviderframeworkonEventServiceRoleDefaultPolicy48CD2133",
                                    "roles": [
                                      {
                                        "Ref": "ProviderframeworkonEventServiceRole9FF04296"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Code": {
                        "id": "Code",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent/Code",
                        "children": {
                          "Stage": {
                            "id": "Stage",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent/Code/Stage"
                          },
                          "AssetBucket": {
                            "id": "AssetBucket",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent/Code/AssetBucket"
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onEvent/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "s3Bucket": {
                                "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0Ref"
                              },
                              "s3Key": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::Select": [
                                        0,
                                        {
                                          "Fn::Split": [
                                            "||",
                                            {
                                              "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Fn::Select": [
                                        1,
                                        {
                                          "Fn::Split": [
                                            "||",
                                            {
                                              "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              }
                            },
                            "handler": "framework.onEvent",
                            "role": {
                              "Fn::GetAtt": [
                                "ProviderframeworkonEventServiceRole9FF04296",
                                "Arn"
                              ]
                            },
                            "runtime": "nodejs10.x",
                            "description": "AWS CDK resource provider framework - onEvent (backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider)",
                            "environment": {
                              "variables": {
                                "USER_ON_EVENT_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "OnEventHandler42BEBAE0",
                                    "Arn"
                                  ]
                                },
                                "USER_IS_COMPLETE_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "IsCompleteHandler7073F4DA",
                                    "Arn"
                                  ]
                                },
                                "WAITER_STATE_MACHINE_ARN": {
                                  "Ref": "Providerwaiterstatemachine5D4A9DF0"
                                }
                              }
                            },
                            "timeout": 900
                          }
                        }
                      }
                    }
                  },
                  "framework-isComplete": {
                    "id": "framework-isComplete",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete/ServiceRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "OnEventHandler42BEBAE0",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "IsCompleteHandler7073F4DA",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "ProviderframeworkisCompleteServiceRoleDefaultPolicy2E7140AC",
                                    "roles": [
                                      {
                                        "Ref": "ProviderframeworkisCompleteServiceRoleB1087139"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Code": {
                        "id": "Code",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete/Code",
                        "children": {
                          "Stage": {
                            "id": "Stage",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete/Code/Stage"
                          },
                          "AssetBucket": {
                            "id": "AssetBucket",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete/Code/AssetBucket"
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-isComplete/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "s3Bucket": {
                                "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0Ref"
                              },
                              "s3Key": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::Select": [
                                        0,
                                        {
                                          "Fn::Split": [
                                            "||",
                                            {
                                              "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Fn::Select": [
                                        1,
                                        {
                                          "Fn::Split": [
                                            "||",
                                            {
                                              "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              }
                            },
                            "handler": "framework.isComplete",
                            "role": {
                              "Fn::GetAtt": [
                                "ProviderframeworkisCompleteServiceRoleB1087139",
                                "Arn"
                              ]
                            },
                            "runtime": "nodejs10.x",
                            "description": "AWS CDK resource provider framework - isComplete (backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider)",
                            "environment": {
                              "variables": {
                                "USER_ON_EVENT_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "OnEventHandler42BEBAE0",
                                    "Arn"
                                  ]
                                },
                                "USER_IS_COMPLETE_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "IsCompleteHandler7073F4DA",
                                    "Arn"
                                  ]
                                }
                              }
                            },
                            "timeout": 900
                          }
                        }
                      }
                    }
                  },
                  "framework-onTimeout": {
                    "id": "framework-onTimeout",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout/ServiceRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "OnEventHandler42BEBAE0",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "IsCompleteHandler7073F4DA",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "ProviderframeworkonTimeoutServiceRoleDefaultPolicy2688969F",
                                    "roles": [
                                      {
                                        "Ref": "ProviderframeworkonTimeoutServiceRole28643D26"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Code": {
                        "id": "Code",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout/Code",
                        "children": {
                          "Stage": {
                            "id": "Stage",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout/Code/Stage"
                          },
                          "AssetBucket": {
                            "id": "AssetBucket",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout/Code/AssetBucket"
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/framework-onTimeout/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "s3Bucket": {
                                "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0Ref"
                              },
                              "s3Key": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::Select": [
                                        0,
                                        {
                                          "Fn::Split": [
                                            "||",
                                            {
                                              "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Fn::Select": [
                                        1,
                                        {
                                          "Fn::Split": [
                                            "||",
                                            {
                                              "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              }
                            },
                            "handler": "framework.onTimeout",
                            "role": {
                              "Fn::GetAtt": [
                                "ProviderframeworkonTimeoutServiceRole28643D26",
                                "Arn"
                              ]
                            },
                            "runtime": "nodejs10.x",
                            "description": "AWS CDK resource provider framework - onTimeout (backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider)",
                            "environment": {
                              "variables": {
                                "USER_ON_EVENT_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "OnEventHandler42BEBAE0",
                                    "Arn"
                                  ]
                                },
                                "USER_IS_COMPLETE_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "IsCompleteHandler7073F4DA",
                                    "Arn"
                                  ]
                                }
                              }
                            },
                            "timeout": 900
                          }
                        }
                      }
                    }
                  },
                  "waiter-state-machine": {
                    "id": "waiter-state-machine",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/waiter-state-machine",
                    "children": {
                      "Role": {
                        "id": "Role",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/waiter-state-machine/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/waiter-state-machine/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "states.eu-west-1.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/waiter-state-machine/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/waiter-state-machine/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "ProviderframeworkisComplete26D7B0CB",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "ProviderframeworkonTimeout0B47CA38",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "ProviderwaiterstatemachineRoleDefaultPolicyD3C3DA1A",
                                    "roles": [
                                      {
                                        "Ref": "ProviderwaiterstatemachineRole0C7159F9"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/Provider/waiter-state-machine/Resource"
                      }
                    }
                  }
                }
              },
              "CDKMetadata": {
                "id": "CDKMetadata",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/CDKMetadata",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/CDKMetadata/Default"
                  }
                }
              },
              "backendawscdkawseksClusterResourceProviderframeworkonEvent122626C5Arn": {
                "id": "backendawscdkawseksClusterResourceProviderframeworkonEvent122626C5Arn",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/backendawscdkawseksClusterResourceProviderframeworkonEvent122626C5Arn"
              },
              "reference-to-backendEKSCreationRoleB4733AF4.Arn": {
                "id": "reference-to-backendEKSCreationRoleB4733AF4.Arn",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/reference-to-backendEKSCreationRoleB4733AF4.Arn"
              },
              "reference-to-backendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket5B47C2C9.Ref": {
                "id": "reference-to-backendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket5B47C2C9.Ref",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/reference-to-backendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket5B47C2C9.Ref"
              },
              "reference-to-backendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1.Ref": {
                "id": "reference-to-backendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1.Ref",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/reference-to-backendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1.Ref"
              },
              "reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0.Ref": {
                "id": "reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0.Ref",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0.Ref"
              },
              "reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9D.Ref": {
                "id": "reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9D.Ref",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider/reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9D.Ref"
              }
            }
          },
          "@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack": {
            "id": "@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack",
            "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack",
            "children": {
              "@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource": {
                "id": "@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource",
                "path": "backend/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::Stack",
                  "aws:cdk:cloudformation:props": {
                    "templateUrl": {
                      "Fn::Join": [
                        "",
                        [
                          "https://s3.eu-west-1.",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/",
                          {
                            "Ref": "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cS3Bucket3C014216"
                          },
                          "/",
                          {
                            "Fn::Select": [
                              0,
                              {
                                "Fn::Split": [
                                  "||",
                                  {
                                    "Ref": "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cS3VersionKey5A891FAC"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Fn::Select": [
                              1,
                              {
                                "Fn::Split": [
                                  "||",
                                  {
                                    "Ref": "AssetParametersf31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666cS3VersionKey5A891FAC"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      ]
                    },
                    "parameters": {
                      "referencetobackendEKSCreationRoleB4733AF4Arn": {
                        "Fn::GetAtt": [
                          "EKSCreationRole6166D41F",
                          "Arn"
                        ]
                      },
                      "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket5B47C2C9Ref": {
                        "Ref": "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3Bucket36C546E0"
                      },
                      "referencetobackendAssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey4AA552E1Ref": {
                        "Ref": "AssetParameters50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1S3VersionKey85C003F9"
                      },
                      "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0Ref": {
                        "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43"
                      },
                      "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef": {
                        "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7"
                      }
                    }
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "backend/AssetParameters",
            "children": {
              "50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1": {
                "id": "50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1",
                "path": "backend/AssetParameters/50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "backend/AssetParameters/50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "backend/AssetParameters/50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "backend/AssetParameters/50e10880d134a01b440991fc77d217f39f01c2d56945215ee9a3b81187c6f3b1/ArtifactHash"
                  }
                }
              },
              "c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c": {
                "id": "c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c",
                "path": "backend/AssetParameters/c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "backend/AssetParameters/c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "backend/AssetParameters/c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "backend/AssetParameters/c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c/ArtifactHash"
                  }
                }
              },
              "b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2": {
                "id": "b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2",
                "path": "backend/AssetParameters/b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "backend/AssetParameters/b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "backend/AssetParameters/b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "backend/AssetParameters/b7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2/ArtifactHash"
                  }
                }
              },
              "10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608": {
                "id": "10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608",
                "path": "backend/AssetParameters/10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "backend/AssetParameters/10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "backend/AssetParameters/10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "backend/AssetParameters/10e0d4bba7ae4b96280b39e3351d41c9fd4487d0e005c1e18f2d50bf056b1608/ArtifactHash"
                  }
                }
              },
              "bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37": {
                "id": "bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37",
                "path": "backend/AssetParameters/bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "backend/AssetParameters/bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "backend/AssetParameters/bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "backend/AssetParameters/bac0243f487acc20e4218710f00301de6ecd41f11245b7d1229d38bfec963e37/ArtifactHash"
                  }
                }
              },
              "f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c": {
                "id": "f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c",
                "path": "backend/AssetParameters/f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "backend/AssetParameters/f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "backend/AssetParameters/f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "backend/AssetParameters/f31929c7384234107031564756b660eebc1b9655909416479438bc63fd99666c/ArtifactHash"
                  }
                }
              },
              "82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573": {
                "id": "82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573",
                "path": "backend/AssetParameters/82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "backend/AssetParameters/82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "backend/AssetParameters/82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "backend/AssetParameters/82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573/ArtifactHash"
                  }
                }
              }
            }
          },
          "@aws-cdk--aws-eks.KubectlProvider": {
            "id": "@aws-cdk--aws-eks.KubectlProvider",
            "path": "backend/@aws-cdk--aws-eks.KubectlProvider",
            "children": {
              "kubectl-layer-8C2542BC-BF2B-4DFE-B765-E181FD30A9A0": {
                "id": "kubectl-layer-8C2542BC-BF2B-4DFE-B765-E181FD30A9A0",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/kubectl-layer-8C2542BC-BF2B-4DFE-B765-E181FD30A9A0",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/@aws-cdk--aws-eks.KubectlProvider/kubectl-layer-8C2542BC-BF2B-4DFE-B765-E181FD30A9A0/Resource"
                  }
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler",
                "children": {
                  "ServiceRole": {
                    "id": "ServiceRole",
                    "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler/ServiceRole",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler/ServiceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "lambda.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "managedPolicyArns": [
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler/ServiceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler/ServiceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "eks:DescribeCluster",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Ref": "referencetobackendEKS854B024AArn"
                                      }
                                    },
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Ref": "referencetobackendEKSCreationRoleB4733AF4Arn"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "HandlerServiceRoleDefaultPolicyCBD0CC91",
                                "roles": [
                                  {
                                    "Ref": "HandlerServiceRoleFCDC14AE"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "Code": {
                    "id": "Code",
                    "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler/Code",
                    "children": {
                      "Stage": {
                        "id": "Stage",
                        "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler/Code/Stage"
                      },
                      "AssetBucket": {
                        "id": "AssetBucket",
                        "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler/Code/AssetBucket"
                      }
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Handler/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                      "aws:cdk:cloudformation:props": {
                        "code": {
                          "s3Bucket": {
                            "Ref": "referencetobackendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket3D45D596Ref"
                          },
                          "s3Key": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    0,
                                    {
                                      "Fn::Split": [
                                        "||",
                                        {
                                          "Ref": "referencetobackendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKeyB9F0BCCERef"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Fn::Select": [
                                    1,
                                    {
                                      "Fn::Split": [
                                        "||",
                                        {
                                          "Ref": "referencetobackendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKeyB9F0BCCERef"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            ]
                          }
                        },
                        "handler": "index.handler",
                        "role": {
                          "Fn::GetAtt": [
                            "HandlerServiceRoleFCDC14AE",
                            "Arn"
                          ]
                        },
                        "runtime": "python3.7",
                        "description": "onEvent handler for EKS kubectl resource provider",
                        "layers": [
                          {
                            "Fn::GetAtt": [
                              "kubectllayer8C2542BCBF2B4DFEB765E181FD30A9A0617C4ADA",
                              "Outputs.LayerVersionArn"
                            ]
                          }
                        ],
                        "memorySize": 256,
                        "timeout": 900,
                        "vpcConfig": {
                          "subnetIds": [
                            {
                              "Ref": "referencetobackendVPCPrivateSubnet1Subnet99009594Ref"
                            },
                            {
                              "Ref": "referencetobackendVPCPrivateSubnet2Subnet44686701Ref"
                            },
                            {
                              "Ref": "referencetobackendVPCPrivateSubnet3SubnetACE4404ARef"
                            }
                          ],
                          "securityGroupIds": [
                            {
                              "Ref": "referencetobackendEKS854B024AClusterSecurityGroupId"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "Provider": {
                "id": "Provider",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider",
                "children": {
                  "framework-onEvent": {
                    "id": "framework-onEvent",
                    "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent",
                    "children": {
                      "ServiceRole": {
                        "id": "ServiceRole",
                        "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent/ServiceRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent/ServiceRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "lambda.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "managedPolicyArns": [
                                  {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent/ServiceRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "Handler886CB40B",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "ProviderframeworkonEventServiceRoleDefaultPolicy48CD2133",
                                    "roles": [
                                      {
                                        "Ref": "ProviderframeworkonEventServiceRole9FF04296"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Code": {
                        "id": "Code",
                        "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent/Code",
                        "children": {
                          "Stage": {
                            "id": "Stage",
                            "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent/Code/Stage"
                          },
                          "AssetBucket": {
                            "id": "AssetBucket",
                            "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent/Code/AssetBucket"
                          }
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "backend/@aws-cdk--aws-eks.KubectlProvider/Provider/framework-onEvent/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                          "aws:cdk:cloudformation:props": {
                            "code": {
                              "s3Bucket": {
                                "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0Ref"
                              },
                              "s3Key": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::Select": [
                                        0,
                                        {
                                          "Fn::Split": [
                                            "||",
                                            {
                                              "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Fn::Select": [
                                        1,
                                        {
                                          "Fn::Split": [
                                            "||",
                                            {
                                              "Ref": "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              }
                            },
                            "handler": "framework.onEvent",
                            "role": {
                              "Fn::GetAtt": [
                                "ProviderframeworkonEventServiceRole9FF04296",
                                "Arn"
                              ]
                            },
                            "runtime": "nodejs10.x",
                            "description": "AWS CDK resource provider framework - onEvent (backend/@aws-cdk--aws-eks.KubectlProvider/Provider)",
                            "environment": {
                              "variables": {
                                "USER_ON_EVENT_FUNCTION_ARN": {
                                  "Fn::GetAtt": [
                                    "Handler886CB40B",
                                    "Arn"
                                  ]
                                }
                              }
                            },
                            "timeout": 900
                          }
                        }
                      }
                    }
                  }
                }
              },
              "CDKMetadata": {
                "id": "CDKMetadata",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/CDKMetadata",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "backend/@aws-cdk--aws-eks.KubectlProvider/CDKMetadata/Default"
                  }
                }
              },
              "backendawscdkawseksKubectlProviderframeworkonEventD57D863BArn": {
                "id": "backendawscdkawseksKubectlProviderframeworkonEventD57D863BArn",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/backendawscdkawseksKubectlProviderframeworkonEventD57D863BArn"
              },
              "reference-to-backendEKS854B024A.Arn": {
                "id": "reference-to-backendEKS854B024A.Arn",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendEKS854B024A.Arn"
              },
              "reference-to-backendEKSCreationRoleB4733AF4.Arn": {
                "id": "reference-to-backendEKSCreationRoleB4733AF4.Arn",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendEKSCreationRoleB4733AF4.Arn"
              },
              "reference-to-backendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket3D45D596.Ref": {
                "id": "reference-to-backendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket3D45D596.Ref",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket3D45D596.Ref"
              },
              "reference-to-backendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKeyB9F0BCCE.Ref": {
                "id": "reference-to-backendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKeyB9F0BCCE.Ref",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKeyB9F0BCCE.Ref"
              },
              "reference-to-backendVPCPrivateSubnet1Subnet99009594.Ref": {
                "id": "reference-to-backendVPCPrivateSubnet1Subnet99009594.Ref",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendVPCPrivateSubnet1Subnet99009594.Ref"
              },
              "reference-to-backendVPCPrivateSubnet2Subnet44686701.Ref": {
                "id": "reference-to-backendVPCPrivateSubnet2Subnet44686701.Ref",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendVPCPrivateSubnet2Subnet44686701.Ref"
              },
              "reference-to-backendVPCPrivateSubnet3SubnetACE4404A.Ref": {
                "id": "reference-to-backendVPCPrivateSubnet3SubnetACE4404A.Ref",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendVPCPrivateSubnet3SubnetACE4404A.Ref"
              },
              "reference-to-backendEKS854B024A.ClusterSecurityGroupId": {
                "id": "reference-to-backendEKS854B024A.ClusterSecurityGroupId",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendEKS854B024A.ClusterSecurityGroupId"
              },
              "reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0.Ref": {
                "id": "reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0.Ref",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0.Ref"
              },
              "reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9D.Ref": {
                "id": "reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9D.Ref",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider/reference-to-backendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9D.Ref"
              }
            }
          },
          "@aws-cdk--aws-eks.KubectlProvider.NestedStack": {
            "id": "@aws-cdk--aws-eks.KubectlProvider.NestedStack",
            "path": "backend/@aws-cdk--aws-eks.KubectlProvider.NestedStack",
            "children": {
              "@aws-cdk--aws-eks.KubectlProvider.NestedStackResource": {
                "id": "@aws-cdk--aws-eks.KubectlProvider.NestedStackResource",
                "path": "backend/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudFormation::Stack",
                  "aws:cdk:cloudformation:props": {
                    "templateUrl": {
                      "Fn::Join": [
                        "",
                        [
                          "https://s3.eu-west-1.",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/",
                          {
                            "Ref": "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573S3BucketDF473350"
                          },
                          "/",
                          {
                            "Fn::Select": [
                              0,
                              {
                                "Fn::Split": [
                                  "||",
                                  {
                                    "Ref": "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573S3VersionKey3EBD5EBC"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Fn::Select": [
                              1,
                              {
                                "Fn::Split": [
                                  "||",
                                  {
                                    "Ref": "AssetParameters82bc4c05e076f8c31e5b9c46db189ab78c92f8e4059a070127bca97382059573S3VersionKey3EBD5EBC"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      ]
                    },
                    "parameters": {
                      "referencetobackendEKS854B024AArn": {
                        "Fn::GetAtt": [
                          "EKSE2753513",
                          "Arn"
                        ]
                      },
                      "referencetobackendEKSCreationRoleB4733AF4Arn": {
                        "Fn::GetAtt": [
                          "EKSCreationRole6166D41F",
                          "Arn"
                        ]
                      },
                      "referencetobackendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket3D45D596Ref": {
                        "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3Bucket9ABBD5A2"
                      },
                      "referencetobackendAssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKeyB9F0BCCERef": {
                        "Ref": "AssetParametersb7d8a9750f8bfded8ac76be100e3bee1c3d4824df006766110d023f42952f5c2S3VersionKey40FF2C4A"
                      },
                      "referencetobackendVPCPrivateSubnet1Subnet99009594Ref": {
                        "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
                      },
                      "referencetobackendVPCPrivateSubnet2Subnet44686701Ref": {
                        "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
                      },
                      "referencetobackendVPCPrivateSubnet3SubnetACE4404ARef": {
                        "Ref": "VPCPrivateSubnet3Subnet3EDCD457"
                      },
                      "referencetobackendEKS854B024AClusterSecurityGroupId": {
                        "Fn::GetAtt": [
                          "EKSE2753513",
                          "ClusterSecurityGroupId"
                        ]
                      },
                      "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA34B0CC0Ref": {
                        "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43"
                      },
                      "referencetobackendAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKey8324DA9DRef": {
                        "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7"
                      }
                    }
                  }
                }
              }
            }
          },
          "ConditionJson": {
            "id": "ConditionJson",
            "path": "backend/ConditionJson",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend/ConditionJson/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "backend/ConditionJson/Resource/Default"
                  }
                }
              }
            }
          },
          "AWSCDKCfnUtilsProviderCustomResourceProvider": {
            "id": "AWSCDKCfnUtilsProviderCustomResourceProvider",
            "path": "backend/AWSCDKCfnUtilsProviderCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "backend/AWSCDKCfnUtilsProviderCustomResourceProvider/Staging"
              },
              "Role": {
                "id": "Role",
                "path": "backend/AWSCDKCfnUtilsProviderCustomResourceProvider/Role"
              },
              "Handler": {
                "id": "Handler",
                "path": "backend/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler"
              }
            }
          },
          "Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider": {
            "id": "Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider",
            "path": "backend/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "backend/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Staging"
              },
              "Role": {
                "id": "Role",
                "path": "backend/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role"
              },
              "Handler": {
                "id": "Handler",
                "path": "backend/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler"
              }
            }
          },
          "ServiceAccountRole": {
            "id": "ServiceAccountRole",
            "path": "backend/ServiceAccountRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend/ServiceAccountRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRoleWithWebIdentity",
                          "Condition": {
                            "StringEquals": {
                              "Fn::GetAtt": [
                                "ConditionJson7698FD65",
                                "Value"
                              ]
                            }
                          },
                          "Effect": "Allow",
                          "Principal": {
                            "Federated": {
                              "Ref": "EKSOpenIdConnectProviderD16FA620"
                            }
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    }
                  }
                }
              }
            }
          },
          "LBControllerPolicy": {
            "id": "LBControllerPolicy",
            "path": "backend/LBControllerPolicy",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend/LBControllerPolicy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                  "aws:cdk:cloudformation:props": {
                    "policyDocument": {
                      "Statement": [
                        {
                          "Action": [
                            "iam:CreateServiceLinkedRole",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeInstances",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeTags",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeListenerCertificates",
                            "elasticloadbalancing:DescribeSSLPolicies",
                            "elasticloadbalancing:DescribeRules",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeTargetGroupAttributes",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "elasticloadbalancing:DescribeTags"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        },
                        {
                          "Action": [
                            "cognito-idp:DescribeUserPoolClient",
                            "acm:ListCertificates",
                            "acm:DescribeCertificate",
                            "iam:ListServerCertificates",
                            "iam:GetServerCertificate",
                            "waf-regional:GetWebACL",
                            "waf-regional:GetWebACLForResource",
                            "waf-regional:AssociateWebACL",
                            "waf-regional:DisassociateWebACL",
                            "wafv2:GetWebACL",
                            "wafv2:GetWebACLForResource",
                            "wafv2:AssociateWebACL",
                            "wafv2:DisassociateWebACL",
                            "shield:GetSubscriptionState",
                            "shield:DescribeProtection",
                            "shield:CreateProtection",
                            "shield:DeleteProtection"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        },
                        {
                          "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:RevokeSecurityGroupIngress"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        },
                        {
                          "Action": "ec2:CreateSecurityGroup",
                          "Effect": "Allow",
                          "Resource": "*"
                        },
                        {
                          "Action": "ec2:CreateTags",
                          "Condition": {
                            "StringEquals": {
                              "ec2:CreateAction": "CreateSecurityGroup"
                            },
                            "Null": {
                              "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                            }
                          },
                          "Effect": "Allow",
                          "Resource": "arn:aws:ec2:*:*:security-group/*"
                        },
                        {
                          "Action": [
                            "ec2:CreateTags",
                            "ec2:DeleteTags"
                          ],
                          "Condition": {
                            "Null": {
                              "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                              "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                            }
                          },
                          "Effect": "Allow",
                          "Resource": "arn:aws:ec2:*:*:security-group/*"
                        },
                        {
                          "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:DeleteSecurityGroup"
                          ],
                          "Condition": {
                            "Null": {
                              "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                            }
                          },
                          "Effect": "Allow",
                          "Resource": "*"
                        },
                        {
                          "Action": [
                            "elasticloadbalancing:CreateLoadBalancer",
                            "elasticloadbalancing:CreateTargetGroup"
                          ],
                          "Condition": {
                            "Null": {
                              "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
                            }
                          },
                          "Effect": "Allow",
                          "Resource": "*"
                        },
                        {
                          "Action": [
                            "elasticloadbalancing:CreateListener",
                            "elasticloadbalancing:DeleteListener",
                            "elasticloadbalancing:CreateRule",
                            "elasticloadbalancing:DeleteRule"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        },
                        {
                          "Action": [
                            "elasticloadbalancing:AddTags",
                            "elasticloadbalancing:RemoveTags"
                          ],
                          "Condition": {
                            "Null": {
                              "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
                              "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                            }
                          },
                          "Effect": "Allow",
                          "Resource": [
                            "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                            "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*"
                          ]
                        },
                        {
                          "Action": [
                            "elasticloadbalancing:ModifyLoadBalancerAttributes",
                            "elasticloadbalancing:SetIpAddressType",
                            "elasticloadbalancing:SetSecurityGroups",
                            "elasticloadbalancing:SetSubnets",
                            "elasticloadbalancing:DeleteLoadBalancer",
                            "elasticloadbalancing:ModifyTargetGroup",
                            "elasticloadbalancing:ModifyTargetGroupAttributes",
                            "elasticloadbalancing:DeleteTargetGroup"
                          ],
                          "Condition": {
                            "Null": {
                              "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
                            }
                          },
                          "Effect": "Allow",
                          "Resource": "*"
                        },
                        {
                          "Action": [
                            "elasticloadbalancing:RegisterTargets",
                            "elasticloadbalancing:DeregisterTargets"
                          ],
                          "Effect": "Allow",
                          "Resource": "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                        },
                        {
                          "Action": [
                            "elasticloadbalancing:SetWebAcl",
                            "elasticloadbalancing:ModifyListener",
                            "elasticloadbalancing:AddListenerCertificates",
                            "elasticloadbalancing:RemoveListenerCertificates",
                            "elasticloadbalancing:ModifyRule"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policyName": "LBControllerPolicy41005BD8",
                    "roles": [
                      {
                        "Ref": "ServiceAccountRoleE318E4CB"
                      }
                    ]
                  }
                }
              }
            }
          },
          "ServiceAccount": {
            "id": "ServiceAccount",
            "path": "backend/ServiceAccount",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "backend/ServiceAccount/Resource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "backend/ServiceAccount/Resource/Default"
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "backend/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "backend/CDKMetadata/Default"
              }
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "backend/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"EKSCreationRole6166D41F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EKSCreationRole6166D41F\",\"Arn\"]}",
                "path": "backend/Exports/Output{\"Fn::GetAtt\":[\"EKSCreationRole6166D41F\",\"Arn\"]}"
              },
              "Output{\"Ref\":\"EKSE2753513\"}": {
                "id": "Output{\"Ref\":\"EKSE2753513\"}",
                "path": "backend/Exports/Output{\"Ref\":\"EKSE2753513\"}"
              }
            }
          }
        }
      },
      "pipeline": {
        "id": "pipeline",
        "path": "pipeline",
        "children": {
          "ECRRep": {
            "id": "ECRRep",
            "path": "pipeline/ECRRep",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "pipeline/ECRRep/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECR::Repository",
                  "aws:cdk:cloudformation:props": {
                    "repositoryName": "springboot-multiarch"
                  }
                }
              }
            }
          },
          "CodeRep": {
            "id": "CodeRep",
            "path": "pipeline/CodeRep",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "pipeline/CodeRep/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeCommit::Repository",
                  "aws:cdk:cloudformation:props": {
                    "repositoryName": "springboot-multiarch"
                  }
                }
              },
              "pipelinePipeline22F2A91D-main-EventRule": {
                "id": "pipelinePipeline22F2A91D-main-EventRule",
                "path": "pipeline/CodeRep/pipelinePipeline22F2A91D-main-EventRule",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/CodeRep/pipelinePipeline22F2A91D-main-EventRule/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                      "aws:cdk:cloudformation:props": {
                        "eventPattern": {
                          "source": [
                            "aws.codecommit"
                          ],
                          "resources": [
                            {
                              "Fn::GetAtt": [
                                "CodeRep89A21CCD",
                                "Arn"
                              ]
                            }
                          ],
                          "detail-type": [
                            "CodeCommit Repository State Change"
                          ],
                          "detail": {
                            "event": [
                              "referenceCreated",
                              "referenceUpdated"
                            ],
                            "referenceName": [
                              "main"
                            ]
                          }
                        },
                        "state": "ENABLED",
                        "targets": [
                          {
                            "id": "Target0",
                            "arn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":codepipeline:eu-west-1:704533066374:",
                                  {
                                    "Ref": "PipelineC660917D"
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineEventsRole46BEEA7C",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "CodeCommitOutput": {
            "id": "CodeCommitOutput",
            "path": "pipeline/CodeCommitOutput"
          },
          "ARMBuild": {
            "id": "ARMBuild",
            "path": "pipeline/ARMBuild",
            "children": {
              "Role": {
                "id": "Role",
                "path": "pipeline/ARMBuild/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/ARMBuild/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codebuild.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonSSMReadOnlyAccess"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline/ARMBuild/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline/ARMBuild/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:eu-west-1:704533066374:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "ARMBuild4875997F"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:eu-west-1:704533066374:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "ARMBuild4875997F"
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "codebuild:CreateReportGroup",
                                    "codebuild:CreateReport",
                                    "codebuild:UpdateReport",
                                    "codebuild:BatchPutTestCases",
                                    "codebuild:BatchPutCodeCoverages"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codebuild:eu-west-1:704533066374:report-group/",
                                        {
                                          "Ref": "ARMBuild4875997F"
                                        },
                                        "-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "eks:DescribeNodegroup",
                                    "eks:DescribeFargateProfile",
                                    "eks:DescribeUpdate",
                                    "eks:DescribeCluster"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::ImportValue": "backend:ExportsOutputFnGetAttEKSCreationRole6166D41FArnBB149869"
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PipelineArtifactsBucket22248F97",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucket22248F97",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ARMBuildRoleDefaultPolicy82427C04",
                            "roles": [
                              {
                                "Ref": "ARMBuildRoleB963047D"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "pipeline/ARMBuild/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "ARM_CONTAINER",
                      "image": "aws/codebuild/amazonlinux2-aarch64-standard:1.0",
                      "imagePullCredentialsType": "CODEBUILD",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_LARGE",
                      "environmentVariables": [
                        {
                          "name": "REPOSITORY_URI",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    4,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "ECRRepBA4EEC3E",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".dkr.ecr.",
                                {
                                  "Fn::Select": [
                                    3,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "ECRRepBA4EEC3E",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".",
                                {
                                  "Ref": "AWS::URLSuffix"
                                },
                                "/",
                                {
                                  "Ref": "ECRRepBA4EEC3E"
                                }
                              ]
                            ]
                          }
                        },
                        {
                          "name": "DOCKERHUB_USERNAME",
                          "type": "PARAMETER_STORE",
                          "value": "/springboot-multiarch/dockerhub/username"
                        },
                        {
                          "name": "DOCKERHUB_PASSWORD",
                          "type": "PARAMETER_STORE",
                          "value": "/springboot-multiarch/dockerhub/password "
                        },
                        {
                          "name": "EKS_NAME",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::ImportValue": "backend:ExportsOutputRefEKSE2753513AF988E47"
                          }
                        },
                        {
                          "name": "EKS_ROLE",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::ImportValue": "backend:ExportsOutputFnGetAttEKSCreationRole6166D41FArnBB149869"
                          }
                        }
                      ]
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "ARMBuildRoleB963047D",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "cdk/pipeline/armbuild.yml"
                    },
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "PipelineArtifactsBucketEncryptionKey01D58D69",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "AMDBuild": {
            "id": "AMDBuild",
            "path": "pipeline/AMDBuild",
            "children": {
              "Role": {
                "id": "Role",
                "path": "pipeline/AMDBuild/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/AMDBuild/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codebuild.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonSSMReadOnlyAccess"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline/AMDBuild/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline/AMDBuild/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:eu-west-1:704533066374:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "AMDBuildF8DA9637"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:eu-west-1:704533066374:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "AMDBuildF8DA9637"
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "codebuild:CreateReportGroup",
                                    "codebuild:CreateReport",
                                    "codebuild:UpdateReport",
                                    "codebuild:BatchPutTestCases",
                                    "codebuild:BatchPutCodeCoverages"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codebuild:eu-west-1:704533066374:report-group/",
                                        {
                                          "Ref": "AMDBuildF8DA9637"
                                        },
                                        "-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "eks:DescribeNodegroup",
                                    "eks:DescribeFargateProfile",
                                    "eks:DescribeUpdate",
                                    "eks:DescribeCluster"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::ImportValue": "backend:ExportsOutputFnGetAttEKSCreationRole6166D41FArnBB149869"
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PipelineArtifactsBucket22248F97",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucket22248F97",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AMDBuildRoleDefaultPolicyFBC6F454",
                            "roles": [
                              {
                                "Ref": "AMDBuildRoleF8CB31F9"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "pipeline/AMDBuild/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
                      "imagePullCredentialsType": "CODEBUILD",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "environmentVariables": [
                        {
                          "name": "REPOSITORY_URI",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    4,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "ECRRepBA4EEC3E",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".dkr.ecr.",
                                {
                                  "Fn::Select": [
                                    3,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "ECRRepBA4EEC3E",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".",
                                {
                                  "Ref": "AWS::URLSuffix"
                                },
                                "/",
                                {
                                  "Ref": "ECRRepBA4EEC3E"
                                }
                              ]
                            ]
                          }
                        },
                        {
                          "name": "DOCKERHUB_USERNAME",
                          "type": "PARAMETER_STORE",
                          "value": "/springboot-multiarch/dockerhub/username"
                        },
                        {
                          "name": "DOCKERHUB_PASSWORD",
                          "type": "PARAMETER_STORE",
                          "value": "/springboot-multiarch/dockerhub/password "
                        },
                        {
                          "name": "EKS_NAME",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::ImportValue": "backend:ExportsOutputRefEKSE2753513AF988E47"
                          }
                        },
                        {
                          "name": "EKS_ROLE",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::ImportValue": "backend:ExportsOutputFnGetAttEKSCreationRole6166D41FArnBB149869"
                          }
                        }
                      ]
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "AMDBuildRoleF8CB31F9",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "cdk/pipeline/amdbuild.yml"
                    },
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "PipelineArtifactsBucketEncryptionKey01D58D69",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "PostBuild": {
            "id": "PostBuild",
            "path": "pipeline/PostBuild",
            "children": {
              "Role": {
                "id": "Role",
                "path": "pipeline/PostBuild/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/PostBuild/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codebuild.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/AmazonSSMReadOnlyAccess"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline/PostBuild/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline/PostBuild/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:eu-west-1:704533066374:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "PostBuild9D7BA511"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:eu-west-1:704533066374:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "PostBuild9D7BA511"
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "codebuild:CreateReportGroup",
                                    "codebuild:CreateReport",
                                    "codebuild:UpdateReport",
                                    "codebuild:BatchPutTestCases",
                                    "codebuild:BatchPutCodeCoverages"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codebuild:eu-west-1:704533066374:report-group/",
                                        {
                                          "Ref": "PostBuild9D7BA511"
                                        },
                                        "-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "eks:DescribeNodegroup",
                                    "eks:DescribeFargateProfile",
                                    "eks:DescribeUpdate",
                                    "eks:DescribeCluster"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::ImportValue": "backend:ExportsOutputFnGetAttEKSCreationRole6166D41FArnBB149869"
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PipelineArtifactsBucket22248F97",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucket22248F97",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "PostBuildRoleDefaultPolicyB513B6CA",
                            "roles": [
                              {
                                "Ref": "PostBuildRole97C68DAB"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "pipeline/PostBuild/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
                      "imagePullCredentialsType": "CODEBUILD",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "environmentVariables": [
                        {
                          "name": "REPOSITORY_URI",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    4,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "ECRRepBA4EEC3E",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".dkr.ecr.",
                                {
                                  "Fn::Select": [
                                    3,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "ECRRepBA4EEC3E",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".",
                                {
                                  "Ref": "AWS::URLSuffix"
                                },
                                "/",
                                {
                                  "Ref": "ECRRepBA4EEC3E"
                                }
                              ]
                            ]
                          }
                        },
                        {
                          "name": "DOCKERHUB_USERNAME",
                          "type": "PARAMETER_STORE",
                          "value": "/springboot-multiarch/dockerhub/username"
                        },
                        {
                          "name": "DOCKERHUB_PASSWORD",
                          "type": "PARAMETER_STORE",
                          "value": "/springboot-multiarch/dockerhub/password "
                        },
                        {
                          "name": "EKS_NAME",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::ImportValue": "backend:ExportsOutputRefEKSE2753513AF988E47"
                          }
                        },
                        {
                          "name": "EKS_ROLE",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::ImportValue": "backend:ExportsOutputFnGetAttEKSCreationRole6166D41FArnBB149869"
                          }
                        }
                      ]
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "PostBuildRole97C68DAB",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "cdk/pipeline/post_build.yml"
                    },
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "PipelineArtifactsBucketEncryptionKey01D58D69",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "Pipeline": {
            "id": "Pipeline",
            "path": "pipeline/Pipeline",
            "children": {
              "ArtifactsBucketEncryptionKey": {
                "id": "ArtifactsBucketEncryptionKey",
                "path": "pipeline/Pipeline/ArtifactsBucketEncryptionKey",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/Pipeline/ArtifactsBucketEncryptionKey/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "Action": [
                                "kms:Create*",
                                "kms:Describe*",
                                "kms:Enable*",
                                "kms:List*",
                                "kms:Put*",
                                "kms:Update*",
                                "kms:Revoke*",
                                "kms:Disable*",
                                "kms:Get*",
                                "kms:Delete*",
                                "kms:ScheduleKeyDeletion",
                                "kms:CancelKeyDeletion",
                                "kms:GenerateDataKey",
                                "kms:TagResource",
                                "kms:UntagResource"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::704533066374:root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineRoleD68726F7",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "ARMBuildRoleB963047D",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "ARMBuildRoleB963047D",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "AMDBuildRoleF8CB31F9",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "AMDBuildRoleF8CB31F9",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PostBuildRole97C68DAB",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PostBuildRole97C68DAB",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "ArtifactsBucketEncryptionKeyAlias": {
                "id": "ArtifactsBucketEncryptionKeyAlias",
                "path": "pipeline/Pipeline/ArtifactsBucketEncryptionKeyAlias",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                      "aws:cdk:cloudformation:props": {
                        "aliasName": "alias/codepipeline-pipelinepipeline22f2a91d",
                        "targetKeyId": {
                          "Fn::GetAtt": [
                            "PipelineArtifactsBucketEncryptionKey01D58D69",
                            "Arn"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "ArtifactsBucket": {
                "id": "ArtifactsBucket",
                "path": "pipeline/Pipeline/ArtifactsBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/Pipeline/ArtifactsBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "aws:kms",
                                "kmsMasterKeyId": {
                                  "Fn::GetAtt": [
                                    "PipelineArtifactsBucketEncryptionKey01D58D69",
                                    "Arn"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "pipeline/Pipeline/ArtifactsBucket/Notifications"
                  }
                }
              },
              "Role": {
                "id": "Role",
                "path": "pipeline/Pipeline/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/Pipeline/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codepipeline.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline/Pipeline/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline/Pipeline/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PipelineArtifactsBucket22248F97",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucket22248F97",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineBuildARMBuildCodePipelineActionRole22869465",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineBuildAMDBuildCodePipelineActionRole36EF82EB",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelinePostBuildPostBuildCodePipelineActionRoleBCBF37FE",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "PipelineRoleDefaultPolicyC7A05455",
                            "roles": [
                              {
                                "Ref": "PipelineRoleD68726F7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "pipeline/Pipeline/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                  "aws:cdk:cloudformation:props": {
                    "roleArn": {
                      "Fn::GetAtt": [
                        "PipelineRoleD68726F7",
                        "Arn"
                      ]
                    },
                    "stages": [
                      {
                        "name": "Source",
                        "actions": [
                          {
                            "name": "CodeCommit_Source",
                            "outputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit_Source"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Source",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeCommit"
                            },
                            "configuration": {
                              "RepositoryName": {
                                "Fn::GetAtt": [
                                  "CodeRep89A21CCD",
                                  "Name"
                                ]
                              },
                              "BranchName": "main",
                              "PollForSourceChanges": false
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "Build",
                        "actions": [
                          {
                            "name": "ARM_Build",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit_Source"
                              }
                            ],
                            "outputArtifacts": [
                              {
                                "name": "ARMBuildOutput"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "ARMBuild4875997F"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineBuildARMBuildCodePipelineActionRole22869465",
                                "Arn"
                              ]
                            }
                          },
                          {
                            "name": "AMD_Build",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit_Source"
                              }
                            ],
                            "outputArtifacts": [
                              {
                                "name": "AMDBuildOutput"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "AMDBuildF8DA9637"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineBuildAMDBuildCodePipelineActionRole36EF82EB",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "PostBuild",
                        "actions": [
                          {
                            "name": "Post_Build",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit_Source"
                              }
                            ],
                            "outputArtifacts": [
                              {
                                "name": "PostBuildOutput"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "PostBuild9D7BA511"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelinePostBuildPostBuildCodePipelineActionRoleBCBF37FE",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "artifactStore": {
                      "type": "S3",
                      "location": {
                        "Ref": "PipelineArtifactsBucket22248F97"
                      },
                      "encryptionKey": {
                        "type": "KMS",
                        "id": {
                          "Fn::GetAtt": [
                            "PipelineArtifactsBucketEncryptionKey01D58D69",
                            "Arn"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "Source": {
                "id": "Source",
                "path": "pipeline/Pipeline/Source",
                "children": {
                  "CodeCommit_Source": {
                    "id": "CodeCommit_Source",
                    "path": "pipeline/Pipeline/Source/CodeCommit_Source",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "pipeline/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "pipeline/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::704533066374:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "pipeline/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "pipeline/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*",
                                            "s3:DeleteObject*",
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucket22248F97",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucket22248F97",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                            "kms:Encrypt",
                                            "kms:ReEncrypt*",
                                            "kms:GenerateDataKey*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucketEncryptionKey01D58D69",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "codecommit:GetBranch",
                                            "codecommit:GetCommit",
                                            "codecommit:UploadArchive",
                                            "codecommit:GetUploadArchiveStatus",
                                            "codecommit:CancelUploadArchive"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "CodeRep89A21CCD",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineSourceCodeCommitSourceCodePipelineActionRoleDefaultPolicyD20EE23A",
                                    "roles": [
                                      {
                                        "Ref": "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "EventsRole": {
                "id": "EventsRole",
                "path": "pipeline/Pipeline/EventsRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline/Pipeline/EventsRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline/Pipeline/EventsRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline/Pipeline/EventsRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "codepipeline:StartPipelineExecution",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codepipeline:eu-west-1:704533066374:",
                                        {
                                          "Ref": "PipelineC660917D"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "PipelineEventsRoleDefaultPolicyFF4FCCE0",
                            "roles": [
                              {
                                "Ref": "PipelineEventsRole46BEEA7C"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Build": {
                "id": "Build",
                "path": "pipeline/Pipeline/Build",
                "children": {
                  "ARM_Build": {
                    "id": "ARM_Build",
                    "path": "pipeline/Pipeline/Build/ARM_Build",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "pipeline/Pipeline/Build/ARM_Build/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "pipeline/Pipeline/Build/ARM_Build/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::704533066374:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "pipeline/Pipeline/Build/ARM_Build/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "pipeline/Pipeline/Build/ARM_Build/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "ARMBuild4875997F",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineBuildARMBuildCodePipelineActionRoleDefaultPolicy3694CE72",
                                    "roles": [
                                      {
                                        "Ref": "PipelineBuildARMBuildCodePipelineActionRole22869465"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "AMD_Build": {
                    "id": "AMD_Build",
                    "path": "pipeline/Pipeline/Build/AMD_Build",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "pipeline/Pipeline/Build/AMD_Build/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "pipeline/Pipeline/Build/AMD_Build/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::704533066374:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "pipeline/Pipeline/Build/AMD_Build/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "pipeline/Pipeline/Build/AMD_Build/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "AMDBuildF8DA9637",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineBuildAMDBuildCodePipelineActionRoleDefaultPolicy8CBCA1B2",
                                    "roles": [
                                      {
                                        "Ref": "PipelineBuildAMDBuildCodePipelineActionRole36EF82EB"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "PostBuild": {
                "id": "PostBuild",
                "path": "pipeline/Pipeline/PostBuild",
                "children": {
                  "Post_Build": {
                    "id": "Post_Build",
                    "path": "pipeline/Pipeline/PostBuild/Post_Build",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "pipeline/Pipeline/PostBuild/Post_Build/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "pipeline/Pipeline/PostBuild/Post_Build/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::704533066374:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "pipeline/Pipeline/PostBuild/Post_Build/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "pipeline/Pipeline/PostBuild/Post_Build/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PostBuild9D7BA511",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelinePostBuildPostBuildCodePipelineActionRoleDefaultPolicyE38575F6",
                                    "roles": [
                                      {
                                        "Ref": "PipelinePostBuildPostBuildCodePipelineActionRoleBCBF37FE"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "pipeline/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "pipeline/CDKMetadata/Default"
              }
            }
          }
        }
      }
    }
  }
}